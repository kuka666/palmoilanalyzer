import time
from mpob import get_latest_news, is_new_news, load_last_news, save_last_news
from analyzer import analyze_news
from datetime import datetime
from telegram_bot import send_news_to_telegram


def check_and_analyze():
    print(f"\nüïí {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} ‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π")
    latest_news_list = get_latest_news()
    if not latest_news_list:
        print("‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    saved_news = load_last_news()
    updated = False

    for news in reversed(latest_news_list):  # —Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
        if is_new_news(news, saved_news):
            print(
                f"üÜï –ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å: {news['date']} ‚Äî {news['title']} [{news['source']}]"
            )
            print(f"üîó {news.get('link')}")
            result = analyze_news(news)
            print("\nüìä –ê–Ω–∞–ª–∏–∑:")
            print(result)
            send_news_to_telegram(news, result)
            saved_news.append(news)
            if len(saved_news) > 10:
                saved_news.pop(0)
            updated = True

    if updated:
        save_last_news(saved_news)
    else:
        print("–ù–µ—Ç –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.")


if __name__ == "__main__":
    while True:
        check_and_analyze()
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 –º–∏–Ω—É—Ç...")
        time.sleep(1800)
